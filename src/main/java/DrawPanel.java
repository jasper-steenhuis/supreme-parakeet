
import java.awt.*;
import java.util.ArrayList;
import java.util.List;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author caspe
 */
public class DrawPanel extends javax.swing.JPanel {

    private int startX, startY, endX, endY;
    private List<Figure> figures = new ArrayList<Figure>();
    private String figureType = "Oval";

    /**
     * Creates new form DrawPanel
     */
    public DrawPanel() {
        initComponents();
    }

    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g); //To change body of generated methods, choose Tools | Templates.
        g.setColor(Color.BLACK);
        for (Figure figure : figures) {
            switch (figure.getTypeOfFigure()) {
                case "Oval":
                    g.drawOval(figure.startX, figure.startY, figure.getWidth(), figure.getHeight());
                    break;
                case "Rect":
                    g.drawRect(figure.startX, figure.startY, figure.getWidth(), figure.getHeight());
                    break;
            }
        }

        switch (this.figureType) {
            case "Oval":
                g.drawOval(startX, startY, endX - startX, endY - startY);
                break;
            case "Rect":
                g.drawRect(startX, startY, endX - startX, endY - startY);
                break;
        }
    }

    public void setFigureType(String figureType) {
        this.figureType = figureType;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                formMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        // TODO add your handling code here:
        endX = evt.getX();
        endY = evt.getY();
        repaint();
    }//GEN-LAST:event_formMouseDragged

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        // TODO add your handling code here:
        startX = evt.getX();
        startY = evt.getY();
        repaint();
    }//GEN-LAST:event_formMousePressed

    private void formMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseReleased
        // TODO add your handling code here:
        Figure figure = new Figure("Oval", startX, startY, endX, endY);;

        if (this.figureType == "Rect") {
            figure = new Figure("Rect", startX, startY, endX, endY);
        }

        this.figures.add(figure);
    }//GEN-LAST:event_formMouseReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
